plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.2'
    id 'idea'
}

import org.apache.tools.ant.taskdefs.condition.Os

project.ext {
    scalaBinary = project.hasProperty('scalaBinary') ? project.getProperty('scalaBinary') : '2.11'
    scalaVersion = project.hasProperty('scalaVersion') ? project.getProperty('scalaVersion') : '2.11.6'
    javaVersion = scalaBinary == '2.11' ? '1.8' : '1.7'
    dl4jVersion = project.hasProperty('dl4j') ? project.getProperty('dl4j') : '0.4-rc3.10-SNAPSHOT'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        os = 'windows-x86_64'
    } else {
        os = 'linux-x86_64'
    }
    println('Scala Binary: '  + scalaBinary + ' - Scala Version: ' + scalaVersion + ' - Java: ' + javaVersion + ' - DL4J: ' + dl4jVersion)
}

subprojects {
    apply plugin: 'scala'

    repositories {
        mavenLocal()
        mavenCentral()
//        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    compileScala {
        scalaCompileOptions.useCompileDaemon = true
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.useAnt = false
        sourceCompatibility = project.javaVersion
        targetCompatibility = project.javaVersion
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
        testCompile 'org.scalatest:scalatest_' + project.scalaBinary + ':3.0.0-M7'
        compile (group: 'org.scala-lang', name: 'scala-library', version: project.scalaVersion) {force = true}
        compile (group: 'org.scala-lang', name: 'scala-compiler', version: project.scalaVersion) {force = true}
        compile ( group: 'org.scala-lang', name: 'scala-reflect', version: project.scalaVersion) {force = true}
    }
}
